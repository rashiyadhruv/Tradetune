type MessageReceived @entity(immutable: true) {
  id: Bytes!
  messageId: Bytes! # bytes32
  sourceChainSelector: BigInt! # uint64
  sender: Bytes! # address
  text_amountIn: BigInt! # uint256
  text_amountOutMin: BigInt! # uint256
  text_tokens: [Bytes!]! # address[]
  text_recipient: Bytes! # address
  text_deadline: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MessageSent @entity(immutable: true) {
  id: Bytes!
  messageId: Bytes! # bytes32
  destinationChainSelector: BigInt! # uint64
  receiver: Bytes! # address
  text_amountIn: BigInt! # uint256
  text_amountOutMin: BigInt! # uint256
  text_tokens: [Bytes!]! # address[]
  text_recipient: Bytes! # address
  text_deadline: BigInt! # uint256
  feeToken: Bytes! # address
  fees: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferRequested @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SnipeExecuted @entity(immutable: true) {
  id: Bytes!
  recipient: Bytes! # address
  destChain: String! # string
  blockNumber: BigInt! # uint256
  sTokenAmt: BigInt! # uint256
  vTokenAmt: BigInt! # uint256
  stableToken: Bytes! # address
  volatileToken: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SnipeInitialized @entity(immutable: true) {
  id: Bytes!
  recipient: Bytes! # address
  destChain: String! # string
  blockNumber: BigInt! # uint256
  stableToken: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TokensTransferred @entity(immutable: true) {
  id: Bytes!
  messageId: Bytes! # bytes32
  destinationChainSelector: BigInt! # uint64
  receiver: Bytes! # address
  token: Bytes! # address
  tokenAmount: BigInt! # uint256
  feeToken: Bytes! # address
  fees: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
